@*
LIST SUBPAGES BY LIMIT AND DATETIME
===================================
This snippet shows how easy it is to combine different queries. It lists the children of the currentpage which is
visible and then grabs a specified number of items sorted by the day they're updated.

How it works:
- It uses the Take() method to specify a maximum number of items to output
- It adds a OrderBy() to sort the items. You can even combine this, for instance OrderBy("UpdateDate, Name desc")
  
NOTE: It is safe to remove this comment (anything between @ * * @), the code that generates the list is only the below!
*@
@using System.Linq;
@inherits umbraco.MacroEngines.DynamicNodeContext
@{
	int maxProductsCount = 5;
}

	@foreach (var category in @Model.Children.Where("Visible").OrderBy("Name"))
	{
		if (category.Children.Any()){
			<div class="infoBox_ cl_both">
				<div class="infoBox__ al_left">
					<h2><a href="@category.Url">@category.Name</a></h2>
					<table>
						<tr>
							<td rowspan="2">
								<a href="@category.Url"><img border="0" alt="@category.Name" width="140" height="130" title="@category.Name" src="@category.Image" /></a>
							</td>
							<td class="width_100 description">
								<ul>
									@{int counter = 0;}
									@foreach(var product in category.Children.OrderBy("Name")){
										<li><a class="item" href="@product.NiceUrl">@product.Name</a></li>
										
										if (++@counter > maxProductsCount){ break;}
									}
								</ul>
							</td>
						</tr>
						<tr>
							<td class="result_right"><a class="moreLink" href="@category.Url">More...</a></td>
						</tr>
					</table>
				</div>
			</div>
		}
	}
