@*
LIST SUBPAGES BY LIMIT AND DATETIME
===================================
This snippet shows how easy it is to combine different queries. It lists the children of the currentpage which is
visible and then grabs a specified number of items sorted by the day they're updated.

How it works:
- It uses the Take() method to specify a maximum number of items to output
- It adds a OrderBy() to sort the items. You can even combine this, for instance OrderBy("UpdateDate, Name desc")
  
NOTE: It is safe to remove this comment (anything between @ * * @), the code that generates the list is only the below!
*@

@inherits umbraco.MacroEngines.DynamicNodeContext

@{ 
	var numberOfItems = 10; 
	var sortBy = HttpContext.Current.Request["sortBy"];
	var direction = HttpContext.Current.Request["direction"];
	
	var orderBy = "UpdateDate";
	switch(sortBy){
		case "price": orderBy = "Price"; break;
		case "name": orderBy = "Name"; break;
	}
	
	var items = @Model.Children.Where("Visible").OrderBy(orderBy).Take(numberOfItems);
	if(direction == "desc"){
		items.Reverse();
	}
 }

@*<ul>*@
    @foreach (var item in @items)
    {
		<div class="post">
        	<table>
				<tr>
					<td colspan="2"><h3><a href="@item.Url">@item.Name ($@item.Price)</a></h3></td>
				</tr>
				<tr>
					<td><img src = @item.Image style="widht:10px; height:200px;"/></td>
					<td style="padding-left:20px; vertical-align:top">@item.Description</td>
				</tr>
				<tr><td colspan="2"><h1>Price: $@item.Price</h1><a href="@item.Url">Read more</a></td></tr>	
			</table>
		</div>
    }
@*</ul>*@